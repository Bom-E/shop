CREATE TABLE USER_PROFILE(
	USER_ID VARCHAR(20) PRIMARY KEY REFERENCES USER_ACCOUNT(USER_ID)
	, USER_NAME VARCHAR(20) NOT NULL
	, GENDER VARCHAR(10) NOT NULL -- male, female
	, EMAIL VARCHAR(50) NOT NULL UNIQUE
	, USER_TEL VARCHAR(20) NOT NULL -- 010-1111-2222
	, BIRTH_DATE DATE NOT NULL
	, JOIN_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP	
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE user_profile
ADD COLUMN BIRTH_DATE DATE NOT NULL;
ALTER TABLE USER_PROFILE RENAME COLUMN USER_EMAIL TO EMAIL;
SELECT * FROM user_profile;

DELETE FROM user_profile;
DELETE FROM user_account;

CREATE TABLE USER_ACCOUNT(
	USER_ID VARCHAR(20) PRIMARY KEY
	, USER_PW VARCHAR(255)
	, USER_ROLE ENUM('USER', 'ADMIN') DEFAULT 'USER'
	, REGISTRATION_ID VARCHAR(20)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
-- 240821 추가 나중에 ER에 기입
ALTER TABLE USER_ACCOUNT
ADD COLUMN LOGIN_TYPE VARCHAR(20);
ALTER TABLE user_account RENAME COLUMN registrationId TO REGISTRATION_ID;
ALTER TABLE USER_ACCOUNT CHANGE USER_PW USER_PW VARCHAR(255);
SELECT * FROM user_account;

CREATE TABLE USER_ADDR(
	ADDR_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ADDR VARCHAR(50) NOT NULL
	, ADDR_DETAIL VARCHAR(50) NOT NULL
	, POST_CODE VARCHAR(10) NOT NULL -- 130166
	, IS_DEFAULT BOOLEAN DEFAULT FALSE
	, USER_ID VARCHAR(20) REFERENCES USER_ACCOUNT(USER_ID)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE user_addr CHANGE USER_ADDR ADDR VARCHAR(50) NOT NULL;

CREATE TABLE MENU(
	MENU_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MENU_NAME VARCHAR(20) NOT NULL
	, MENU_PAGE VARCHAR(50) NOT NULL -- URL, 유연성 부여
	, MENU_INDEX INT NOT NULL
	, MENU_TYPE VARCHAR(20) NOT NULL
	, REQUIRED_ROLE VARCHAR(20)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE BOOKS(
	BOOK_CODE INT AUTO_INCREMENT PRIMARY KEY
	, BOOK_NAME VARCHAR(50) NOT NULL UNIQUE
	, BOOK_PRICE INT NOT NULL
	, AUTHOR_CODE INT NOT NULL REFERENCES AUTHORS (AUTHOR_CODE)
	, PUBLISHER_CODE INT NOT NULL REFERENCES PUBLISHERS (PUBLISHER_CODE)
	, CATE_CODE INT NOT NULL REFERENCES CATE(CATE_CODE)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

SHOW CREATE TABLE books;
ALTER TABLE books DROP FOREIGN KEY BOOKS_IBFK_1;
ALTER TABLE books DROP FOREIGN KEY BOOKS_IBFK_2;
ALTER TABLE books MODIFY COLUMN AUTHOR_CODE INT NOT NULL;
ALTER TABLE books MODIFY COLUMN PUBLISHER_CODE INT NOT NULL;
ALTER TABLE books ADD CONSTRAINT BOOKS_IBFK_1
FOREIGN KEY (AUTHOR_CODE) REFERENCES AUTHORS(AUTHOR_CODE);
ALTER TABLE books ADD CONSTRAINT BOOKS_IBFK_2
FOREIGN KEY (PUBLISHER_CODE) REFERENCES PUBLISHERS(PUBLISHER_CODE);

CREATE TABLE BOOK_INVENTORY(
	BOOK_CODE INT PRIMARY KEY REFERENCES BOOKS(BOOK_CODE)
	, CURRENT_STOCK INT
	, NEEDS_RESTOCK BOOLEAN GENERATED ALWAYS AS (CURRENT_STOCK < 5) STORED 
	, MAXIMUM_STOCK INT 
	, LAST_STOCK_UPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, LAST_ORDER_DATE TIMESTAMP
	, NEXT_AVAILABLE_DATE TIMESTAMP
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE book_inventory ADD CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE book_inventory ADD UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

CREATE TABLE BOOK_DETAIL(
	BOOK_CODE INT PRIMARY KEY REFERENCES BOOKS(BOOK_CODE)
	, BOOK_INDEX VARCHAR(5000) NOT NULL
	, BOOK_LONG_INTRO VARCHAR(5000) NOT NULL
	, BOOK_SHORT_INTRO VARCHAR(50) NOT NULL
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE BOOK_DATES(
	BOOK_CODE INT PRIMARY KEY REFERENCES BOOKS(BOOK_CODE)
	, REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- 데이터베이스 등록일
	, PUB_DATE DATE -- 출판일
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE SLIDER_ITEMS(
   ID INT AUTO_INCREMENT PRIMARY KEY
   , BOOK_CODE INT
   , FOREIGN KEY(BOOK_CODE) REFERENCES BOOKS(BOOK_CODE)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	, GOODS_CIDE INT
	, FOREIGN KEY(GOODS_CODE) REFERENCES GOODS(GOODS_CODE)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	, IMG_CODE INT
	, FOREIGN KEY(IMG_CODE) REFERENCES IMAGES(IMG_CODE)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	, SLIDER_ID INT
	, FOREIGN KEY(SLIDER_ID) REFERENCES SLIDERS(SLIDER_ID)
	, EVENT_CODE INT
	, FOREIGN KEY(EVENT_CODE) REFERENCES events_tab(EVENT_CODE)
		ON DELETE CASCADE
		ON UPDATE CASCADE
   , DISPLAY_ORDER INT
   , IS_ACTIVE BOOLEAN DEFAULT TRUE
   , CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
   , UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE SLIDERS (
   SLIDER_ID INT AUTO_INCREMENT PRIMARY KEY
   , SLIDER_NAME VARCHAR(100) NOT NULL
   , CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
   , UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE SLIDER_ITEMS
ADD COLUMN SLIDER_ID INT,
ADD FOREIGN KEY (SLIDER_ID) REFERENCES SLIDERS(SLIDER_ID);

ALTER TABLE slider_items ADD COLUMN GOODS_CODE INT 
, ADD CONSTRAINT slider_items_ibfk_3 FOREIGN KEY (GOODS_CODE) REFERENCES goods(GOODS_CODE)
ON DELETE CASCADE
ON UPDATE CASCADE ;

ALTER TABLE SLIDER_ITEMS DROP COLUMN GOODS_CODE;
ALTER TABLE slider_items MODIFY COLUMN GOODS_CODE ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE slider_items DROP FOREIGN KEY slider_items_ibfk_3;
SHOW CREATE TABLE slider_items;
ALTER TABLE slider_items
ADD COLUMN EVENT_CODE INT
, ADD FOREIGN KEY (EVENT_CODE) REFERENCES events_tab (EVENT_CODE) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE slider_items
DROP FOREIGN KEY fk_event_code;
ALTER TABLE SLIDER_ITEMS
DROP FOREIGN KEY slider_items_ibfk_2;
ALTER TABLE SLIDER_ITEMS
ADD CONSTRAINT slider_items_ibfk_2
FOREIGN KEY (IMG_CODE) REFERENCES IMAGES(IMG_CODE)
ON DELETE CASCADE ON UPDATE CASCADE;


CREATE TABLE AUTHORS(
	AUTHOR_CODE INT AUTO_INCREMENT PRIMARY KEY
	, AUTHOR_NAME VARCHAR(30) NOT NULL
	, AUTHOR_INTRO VARCHAR(3000)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE PUBLISHERS(
	PUBLISHER_CODE INT AUTO_INCREMENT PRIMARY KEY
	, PUBLISHER_NAME VARCHAR(50) NOT NULL
	, PUBLISHER_INTRO VARCHAR(3000)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 자기참조 트리구조
CREATE TABLE CATE(
	CATE_CODE INT AUTO_INCREMENT PRIMARY KEY
   , CATE_NAME VARCHAR(100) NOT NULL
   , PARENT_CODE INT REFERENCES CATE (CATE_CODE)
   , CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE GOODS(
   GOODS_CODE INT AUTO_INCREMENT PRIMARY KEY
   , GOODS_NAME VARCHAR(50) NOT NULL
   , GOODS_PRICE INT NOT NULL
   , GOODS_STOCK INT DEFAULT 100
   , CATE_CODE INT NOT NULL REFERENCES CATE (CATE_CODE)
   , CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
SHOW CREATE TABLE goods;

ALTER TABLE goods DROP FOREIGN KEY goods_ibfk_1;
ALTER TABLE goods MODIFY COLUMN CATE_CODE INT NOT NULL;
ALTER TABLE goods ADD CONSTRAINT goods_ibfk_1
FOREIGN KEY (CATE_CODE) REFERENCES cate(CATE_CODE);

CREATE TABLE GOODS_DETAIL(
	GOODS_CODE INT PRIMARY KEY REFERENCES goods(GOODS_CODE)
	, GOODS_DESCRIPTION TEXT
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 
);

CREATE TABLE GOODS_INVENTORY(
	GOODS_CODE INT PRIMARY KEY REFERENCES GOODS(GOODS_CODE)
	, CURRENT_STOCK INT
	, NEEDS_RESTOCK BOOLEAN GENERATED ALWAYS AS (CURRENT_STOCK < 5) STORED 
	, MAXIMUM_STOCK INT 
	, LAST_STOCK_UPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, LAST_ORDER_DATE TIMESTAMP
	, NEXT_AVAILABLE_DATE TIMESTAMP
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE GOODS_inventory ADD CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE GOODS_inventory ADD UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

CREATE TABLE IMAGES(
   IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
   , ORIGIN_FILE_NAME VARCHAR(150) NOT NULL
   , ATTACHED_FILE_NAME VARCHAR(200) NOT NULL
   , IS_MAIN BOOLEAN 
   , BOOK_CODE INT
   , GOODS_CODE INT
   , EVENT_CODE INT
   , AD_CODE INT
   , FOREIGN KEY(BOOK_CODE) REFERENCES BOOKS (BOOK_CODE)
		ON DELETE CASCADE
		ON UPDATE CASCADE
   , FOREIGN KEY(GOODS_CODE) REFERENCES GOODS (GOODS_CODE)
   	ON DELETE CASCADE
   	ON UPDATE CASCADE
   , FOREIGN KEY(EVENT_CODE) REFERENCES events_tab (EVENT_CODE)
   	ON DELETE CASCADE
   	ON UPDATE CASCADE
   , FOREIGN KEY(AD_CODE) REFERENCES ad(AD_CODE)
   	ON DELETE CASCADE
   	ON UPDATE CASCADE
   , CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE images DROP FOREIGN KEY images_ibfk_3;
ALTER TABLE IMAGES
ADD CONSTRAINT images_ibfk_3
FOREIGN KEY (EVENT_CODE) REFERENCES EVENTS_TAB(EVENT_CODE)
ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE images
ADD COLUMN AD_CODE INT
, ADD CONSTRAINT images_ibfk_4
FOREIGN KEY (AD_CODE) REFERENCES ad(AD_CODE)
ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE ORDERS(
	ORDER_CODE INT AUTO_INCREMENT PRIMARY KEY
	, USER_ID VARCHAR(20) REFERENCES USER_ACCOUNT (USER_ID) -- 여기서 주소랑 개인정보 가져오기
	, ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, TOTAL_AMOUNT INT NOT NULL -- 집계 함수 쓸거임
	, ORDER_STATUS ENUM('처리중', '배송중', '완료', '취소') DEFAULT '처리중' 
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE PAYMENT_METHODS(
	PAYMENT_METHOD_CODE INT AUTO_INCREMENT PRIMARY KEY
	, METHOD_NAME VARCHAR(50) NOT NULL UNIQUE -- 네이버페이 간편결제, 카카오페이 간편결제, 신용카드 등
	, METHOD_DESCRIPTION VARCHAR(255)
	, IS_ACTIVE BOOLEAN DEFAULT TRUE -- 결제수단이 현재 이용 가능한지 또는 특정 결제수단을 막을 수 있음
	, CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE ORDER_PAYMENT(
	PAYMENT_CODE INT AUTO_INCREMENT PRIMARY KEY
	, PAYMENT_METHOD_CODE INT REFERENCES PAYMENT_METHODS (PAYMENT_METHOD_CODE)
	, PAYMENT_AMOUNT INT NOT NULL
	, PAYMENT_STATUS ENUM('성공', '실패', '보류') NOT NULL
	, PAYMENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, TRANSACTION_ID VARCHAR(50) -- 결제 시스템에서 제공하는 고유 거래 id
	, ORDER_CODE INT REFERENCES ORDERS(ORDER_CODE)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE SHIPPING_METHODS(
	SHIPPING_METHOD_CODE INT AUTO_INCREMENT PRIMARY KEY
	, METHOD_NAME VARCHAR(50) NOT NULL UNIQUE
	, METHOD_DESCRIPTION VARCHAR(255)
	, IS_DOMESTIC BOOLEAN NOT NULL
	, ESTIMATED_DAYS INT
	, IS_ACTIVE  BOOLEAN DEFAULT TRUE -- 배송방법 비활성화 및 활성화 가능
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE ORDER_SHIPPING(
	ORDER_CODE INT PRIMARY KEY REFERENCES ORDERS(ORDER_CODE)
	, TRACKING_NUMBER VARCHAR(20)
	, SPECIAL_INSTRUCTIONS VARCHAR(50)
	, SHIPPING_METHOD_CODE INT REFERENCES SHIPPING_METHODS(SHIPPING_METHOD_CODE)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE ORDER_DETAIL(
	ORDER_DETAIL_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ORDER_CODE INT REFERENCES ORDERS (ORDER_CODE)
	, BOOK_CODE INT REFERENCES BOOKS (BOOK_CODE) -- 이거로 가격을 가져올 수 있을듯 그럼 개수도 집계 함수로 가져올 수 있을 듯
	, GOODS_CODE INT REFERENCES GOODS (GOODS_CODE)
	, CHECK ((BOOK_CODE IS NULL) != (GOODS_CODE IS NULL)) 
	, QUANTITY INT NOT NULL
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE REVIEWS(
	REVIEW_CODE INT AUTO_INCREMENT PRIMARY KEY
	, USER_ID VARCHAR(20) REFERENCES USER_PROFILE (USER_ID)
	, ORDER_DETAIL_CODE INT REFERENCES ORDER_DETAIL(ORDER_DETAIL_CODE)
	, RATING INT NOT NULL CHECK (RATING BETWEEN 1 AND 5)
	, REVIEW_TEXT VARCHAR(300)
	, REVIEW_DATE DATE DEFAULT CURRENT_DATE
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
SHOW CREATE TABLE reviews;
ALTER TABLE REVIEWS DROP FOREIGN KEY reviews_ibfk_1;
ALTER TABLE REVIEWS ADD CONSTRAINT reviews_ibfk_1
FOREIGN KEY (USER_ID) REFERENCES USER_PROFILE(USER_ID);

DROP TABLE book_reviews;

ALTER TABLE book_reviews
ADD COLUMN ORDER_DETAIL_CODE INT
, ADD FOREIGN KEY (ORDER_DETAIL_CODE) REFERENCES order_detail(ORDER_DETAIL_CODE)
, DROP FOREIGN KEY book_reviews_ibfk_2
, DROP COLUMN BOOK_CODE;

-- BOOK_REVIEWS랑 똑같아서 하나 지우고 BOOK_REVIEWS를 REVIEWS로 바꿈.
CREATE TABLE GOODS_REVIEWS(
	REVIEW_CODE INT AUTO_INCREMENT PRIMARY KEY
	, USER_ID VARCHAR(20) REFERENCES USER_ACCOUNT (USER_ID)
	, ORDER_DETAIL_CODE INT REFERENCES ORDER_DETAIL (ORDER_DETAIL_CODE)
	, RATING INT NOT NULL CHECK (RATING BETWEEN 1 AND 5)
	, REVIEW_TEXT VARCHAR(300)
	, REVIEW_DATE DATE DEFAULT CURRENT_DATE
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE GOODS_REVIEWS
ADD COLUMN ORDER_DETAIL_CODE INT
, ADD FOREIGN KEY (ORDER_DETAIL_CODE) REFERENCES ORDER_DETAIL(ORDER_DETAIL_CODE)
, DROP FOREIGN KEY goods_reviews_ibfk_2
, DROP COLUMN GOODS_CODE;

DROP TABLE goods_reviews;

CREATE TABLE COUPON(
	COUPON_CODE INT AUTO_INCREMENT PRIMARY KEY
	, COUPON_NAME VARCHAR(100) NOT NULL
	, COUPON_DESCRIPTION VARCHAR(300)
	, DISCOUNT_PERCENT INT
	, DISCOUNT_AMOUNT INT
	, MIN_ORDER_AMOUNT INT  
	, MAX_ORDER_AMOUNT INT
	, MAX_DISCOUNT_AMOUNT INT
	, VALID_FROM DATE NOT NULL
	, VALID_TO DATE NOT NULL
	, CHECK (VALID_TO >= VALID_FROM)
	, IS_ACTIVE BOOLEAN DEFAULT TRUE
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE USER_COUPON(
	USER_COUPON_CODE INT AUTO_INCREMENT PRIMARY KEY
	, IS_USED BOOLEAN DEFAULT FALSE
	, COUPON_CODE INT REFERENCES COUPON(COUPON_CODE)
	, USER_ID VARCHAR(20) REFERENCES USER_ACCOUNT(USER_ID)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP	
);

CREATE TABLE USER_POINTS(
	USER_ID VARCHAR(20) PRIMARY KEY REFERENCES USER_ACCOUNT(USER_ID)
	, TOTAL_POINTS INT DEFAULT 0
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE POINT_HISTORY(
	HISTORY_ID INT AUTO_INCREMENT PRIMARY KEY
	, POINTS_CHANGED INT NOT NULL -- INT형은 마이너스도 기록 되는지?
	, REASON ENUM('적립', '사용', '만료', '조정') NOT NULL
	, ORDER_CODE INT REFERENCES ORDERS(ORDER_CODE)
	, USER_ID VARCHAR(20) REFERENCES USER_ACCOUNT(USER_ID)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ORDER_DISCOUNT(
	ORDER_DISCOUNT_CODE INT AUTO_INCREMENT PRIMARY KEY
	, DISCOUNT_TYPE ENUM('COUPON', 'POINTS') NOT NULL
	, DISCOUNT_AMOUNT INT NOT NULL
	, POINTS_USED INT
	, COUPON_CODE INT REFERENCES COUPON(COUPON_CODE)
	, ORDER_CODE INT REFERENCES ORDERS(ORDER_CODE)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE WISH_LIST(
	WISH_CODE INT AUTO_INCREMENT PRIMARY KEY
	, USER_ID VARCHAR(20) REFERENCES USER_ACCOUNT(USER_ID)
	, BOOK_CODE INT REFERENCES BOOKS(BOOK_CODE)
	, GOODS_CODE INT REFERENCES GOODS(GOODS_CODE)
	, CHECK ((BOOK_CODE IS NULL) != (GOODS_CODE IS NULL))
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE EVENTS_TAB(
	EVENT_CODE INT AUTO_INCREMENT PRIMARY KEY
	, EVENT_NAME VARCHAR(100) NOT NULL
	, EVENT_DESCRIPTION TEXT
	, START_DATE DATE NOT NULL
	, END_DATE DATE NOT NULL
	, IS_ACTIVE BOOLEAN DEFAULT TRUE
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE EVENT_DETAILS(
	EVENT_DETAIL_CODE INT AUTO_INCREMENT PRIMARY KEY
	, EVENT_DETAIL_CONTENT TEXT
	, EVENT_CODE INT NOT NULL REFERENCES EVENTS_TAB(EVENT_CODE)
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE AD(
	AD_CODE INT AUTO_INCREMENT PRIMARY KEY
	, AD_NAME VARCHAR(100) NOT NULL
	, AD_DESCRIPTION TEXT
	, START_DATE DATE
	, END_DATE DATE
	, IS_ACTIVE BOOLEAN DEFAULT TRUE
	, AD_TYPE ENUM('메인', '헤더', '팝업') NOT NULL
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE AD_PLACEMENT(
	PLACEMENT_CODE INT AUTO_INCREMENT PRIMARY KEY
	, AD_CODE INT NOT NULL REFERENCES AD(AD_CODE)
	, PLACEMENT_TYPE ENUM('메인_위', '메인_아래', '헤더', '팝업') NOT NULL
	, START_DATE DATE
	, END_DATE DATE
	, DISPLAY_ORDER INT
	, IS_ACTIVE BOOLEAN DEFAULT TRUE
	, CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	, UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DROP TABLE authors;
DROP TABLE books;
DROP TABLE cate;
DROP TABLE goods;
DROP TABLE images;
DROP TABLE menu;
DROP TABLE orders;
DROP TABLE order_detail;
DROP TABLE publishers;
DROP TABLE review;
DROP TABLE shop_user;
DROP TABLE slider_items;
